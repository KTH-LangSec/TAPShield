[
    {
        "id": "d0cf2b5fd7e2cc31",
        "type": "subflow",
        "name": "opcxml (3)",
        "info": "OPC XML Client  \n\n### Inputs\n---\n## _`url`_  \n If not configured in the node, this optional property sets the url of the request.  \n\n## _`action`_   <string>  \n If not configured in the node, ths optional property sets the OPC XML Action of the request. Must be one of \n `GetStatus`, `Read`, `Write`, ``Subscribe, `SubscriptionPolledrefresh`, `SubscriptionCancel`, `Browse` or `GetProperties`\n\n## _`payload`_  \n The payload defines the details of the action. Each action has different payload structure which is transformed to a Soap Envelope as required by the OPC XML server.  \n - Read\n ```\n payload = {\n   \"ItemPath\": <string>, optional, server dependent\n   \"ItemList\": [\n        {\n            \"ItemName\": <string>, required\n            \"ItemPath\": <string>, optional, server dependent\n            \"ClientItemHandle\": <string> optional\n        },\n        ...\n ]}\n ```\n - Write\n ```\n payload = {\n   \"ItemPath\": <string>, optional, server dependent\n   \"ItemList\": [\n        {\n            \"ItemName\": <string>, required\n            \"ItemPath\": <string>, optional, server dependent\n            \"ClientItemHandle\": <string>, optional\n            \"value\": <>, required\n            \"dataType\": <string> required as retrieved from GetProperties action  \n        },\n        ...\n ]}\n ```\n - Subscribe\n ```\n payload = {\n   \"SubscriptionPingRate\": <number>, optional defaults to 60000 ms  \n   \"requestedSamplingRate\": <number>, optional defaults to 1000 ms  \n   \"ClientRequestHandle\": <string>, optional\n   \"ItemPath\": <string>,\n   \"ItemList\": [\n        {\n            \"ItemName\": <string>, required\n            \"ItemPath\": <string>, optional, server dependent\n            \"ClientItemHandle\": <string> optional\n        },\n        ...\n ]}\n ```\n - SubscriptionPolledRefresh\n ```\n payload = {'ServerSubHandle': <string>}\n ```\n - SubscriptionCancel\n ```\n payload = {'ServerSubHandle': <string>}\n ```\n - Browse\n ```\n payload = {'ItemName': <string>}\n ```  \n - GetProperties\n ```\n payload = {'ItemName': <string>}\n ```  \n\n ---\n\n### Example  \nBrowse Advosol public server  \n```  \nmsg.url = 'http://info.advosol.com/XMLDADemo/XML_Sim/OpcXmlDaServer.asmx'  \nmsg.action = 'Browse'\nmsg.payload = {\"ItemName\": \"\"}\n```\n\n# Details\nUse this at your own risk. This client is not certified, nor based on any documentation. Its just loosely a result of testing communication with a couple of OPC XML servers that happen to be within reach.\n\n\n",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 180,
                "wires": [
                    {
                        "id": "329337a876af9a31"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1260,
                "y": 920,
                "wires": [
                    {
                        "id": "18d1ae70a67e1fa0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "action",
                "type": "str",
                "value": "GetStatus",
                "ui": {
                    "type": "select",
                    "opts": {
                        "opts": [
                            {
                                "l": {
                                    "en-US": "GetStatus"
                                },
                                "v": "GetStatus"
                            },
                            {
                                "l": {
                                    "en-US": "Read"
                                },
                                "v": "Read"
                            },
                            {
                                "l": {
                                    "en-US": "Write"
                                },
                                "v": "Write"
                            },
                            {
                                "l": {
                                    "en-US": "Subscribe"
                                },
                                "v": "Subscribe"
                            },
                            {
                                "l": {
                                    "en-US": "SubscriptionPolledRefresh"
                                },
                                "v": "SubscriptionPolledRefresh"
                            },
                            {
                                "l": {
                                    "en-US": "SubscriptionCancel"
                                },
                                "v": "SubscriptionCancel"
                            },
                            {
                                "l": {
                                    "en-US": "Browse"
                                },
                                "v": "Browse"
                            },
                            {
                                "l": {
                                    "en-US": "GetProperties"
                                },
                                "v": "GetProperties"
                            },
                            {
                                "l": {
                                    "en-US": "<msg.action>"
                                },
                                "v": ""
                            }
                        ]
                    }
                }
            },
            {
                "name": "url",
                "type": "str",
                "value": "",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            }
        ],
        "meta": {
            "keywords": "OPC, opcxml, client"
        },
        "color": "#da9",
        "outputLabels": [
            "payload"
        ]
    },
    {
        "id": "fef82f3da28a8f47",
        "type": "template",
        "z": "d0cf2b5fd7e2cc31",
        "name": "GetStatus",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n<GetStatus xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\"/>\n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 620,
        "y": 60,
        "wires": [
            [
                "4ca3e03b4552fd3a"
            ]
        ]
    },
    {
        "id": "e699efee3682f827",
        "type": "http request",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1010,
        "y": 160,
        "wires": [
            [
                "3d4e8f2e8fc3ae67"
            ]
        ]
    },
    {
        "id": "5a27fd4ba61c7cdc",
        "type": "xml",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 310,
        "y": 540,
        "wires": [
            [
                "27854770fb9875c6"
            ]
        ]
    },
    {
        "id": "4f89507a78076878",
        "type": "template",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Read",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n <Read xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\">\n  <Options\n    ReturnErrorText=\"true\"\n    ReturnItemTime=\"true\"\n    ReturnItemName=\"true\"\n    LocaleID=\"en\"/>\n  <ItemList{{#payload.ItemPathExists}} ItemPath=\"{{{payload.ItemPath}}}\"{{/payload.ItemPathExists}}>\n    {{#payload.ItemList}}\n       <Items{{#ItemPathExists}} ItemPath=\"{{{ItemPath}}}\"{{/ItemPathExists}} ItemName=\"{{{ItemName}}}\"{{#ClientItemHandle}} ClientItemHandle=\"{{{ClientItemHandle}}}\"{{/ClientItemHandle}}/>\n    {{/payload.ItemList}}\n  </ItemList>\n </Read>\t  \n</soap:Body></soap:Envelope>\n",
        "output": "str",
        "x": 730,
        "y": 100,
        "wires": [
            [
                "4ca3e03b4552fd3a"
            ]
        ]
    },
    {
        "id": "bd1315a6e3f8b4f6",
        "type": "switch",
        "z": "d0cf2b5fd7e2cc31",
        "name": "action",
        "property": "action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "GetStatus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Read",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Write",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Subscribe",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SubscriptionPolledRefresh",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SubscriptionCancel",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Browse",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GetProperties",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 9,
        "x": 390,
        "y": 180,
        "wires": [
            [
                "fef82f3da28a8f47"
            ],
            [
                "79afa75c98cb9f87"
            ],
            [
                "84afeb6ac16419de"
            ],
            [
                "e6a5c5e9cf994edb"
            ],
            [
                "b054cb4430e840f8"
            ],
            [
                "60b2c94907db639b"
            ],
            [
                "3a62b4721d7d104c"
            ],
            [
                "0d156a10dda7593d"
            ],
            [
                "b3aab6b87ba3ddb4"
            ]
        ]
    },
    {
        "id": "3a62b4721d7d104c",
        "type": "template",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Browse",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n<Browse xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\"\n\tItemName=\"{{{payload.ItemName}}}\"  \n\tBrowseFilter=\"all\" \n\tReturnPropertyValues=\"true\"\n>\n            <PropertyNames>dataType</PropertyNames>\n            <PropertyNames>accessRights</PropertyNames>\n</Browse>\t  \n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 600,
        "y": 300,
        "wires": [
            [
                "4ca3e03b4552fd3a"
            ]
        ]
    },
    {
        "id": "b3aab6b87ba3ddb4",
        "type": "function",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Error",
        "func": "node.error('Unknown SOAP action', msg)\n",
        "outputs": 0,
        "noerr": 0,
        "x": 570,
        "y": 380,
        "wires": []
    },
    {
        "id": "95da086e54fd2111",
        "type": "switch",
        "z": "d0cf2b5fd7e2cc31",
        "name": "action",
        "property": "action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "GetStatus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Read",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Write",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Subscribe",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SubscriptionPolledRefresh",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SubscriptionCancel",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Browse",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GetProperties",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 8,
        "x": 230,
        "y": 820,
        "wires": [
            [
                "be1a2b999811fbd1"
            ],
            [
                "cdf939c1c776dd60"
            ],
            [
                "3df97260b9a86892"
            ],
            [
                "9606582474b12422"
            ],
            [
                "0972f11803b5d1cc"
            ],
            [
                "0e22dd1b5020fc6f"
            ],
            [
                "7d27e7925b33401e"
            ],
            [
                "ab14cc75b0c79d34"
            ]
        ]
    },
    {
        "id": "ad03d501b7ae693a",
        "type": "link out",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Response",
        "links": [
            "06b8d55e92fa7f4c"
        ],
        "x": 1295,
        "y": 140,
        "wires": []
    },
    {
        "id": "cdf939c1c776dd60",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "ReadResponse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.ReadResponse.RItemList.Items.{\t\"ItemName\":$.\"$\".ItemName,\t\"ClientItemHandle\":$.\"$\".ClientItemHandle,\t\"Timestamp\":$.\"$\".Timestamp,\t\"value\": Value.\"_\",\t\"type\": Value.\"$\".\"xsi:type\",\t\"Quality\": Quality[0].\"$\".QualityField\t}[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 760,
        "wires": [
            [
                "dbecebde486aaf4a"
            ]
        ]
    },
    {
        "id": "dbecebde486aaf4a",
        "type": "split",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 760,
        "wires": [
            [
                "8b056b4645deabe4"
            ]
        ]
    },
    {
        "id": "8b056b4645deabe4",
        "type": "switch",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "xsd:float",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "xsd:double",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "xsd:int",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "xsd:unsignedInt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "xsd:string",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 830,
        "y": 760,
        "wires": [
            [
                "4c128f44a4bd1ee7"
            ],
            [
                "4c128f44a4bd1ee7"
            ],
            [
                "4c128f44a4bd1ee7"
            ],
            [
                "4c128f44a4bd1ee7"
            ],
            [
                "c3427ceefbdc0d05"
            ],
            [
                "f97a7c888792e550",
                "0e05ec7dc7963c34"
            ]
        ]
    },
    {
        "id": "f97a7c888792e550",
        "type": "join",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1150,
        "y": 780,
        "wires": [
            [
                "c78ba39c65520f54"
            ]
        ]
    },
    {
        "id": "4c128f44a4bd1ee7",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "number",
        "rules": [
            {
                "t": "set",
                "p": "payload.value",
                "pt": "msg",
                "to": "$number(payload.value)",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload.type",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 720,
        "wires": [
            [
                "f97a7c888792e550"
            ]
        ]
    },
    {
        "id": "c3427ceefbdc0d05",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "string",
        "rules": [
            {
                "t": "delete",
                "p": "payload.type",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 760,
        "wires": [
            [
                "f97a7c888792e550"
            ]
        ]
    },
    {
        "id": "71a20db2f4d30707",
        "type": "function",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Warn",
        "func": "node.warn(msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "f6237b4590b0aea9",
        "type": "link out",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "links": [
            "18d1ae70a67e1fa0"
        ],
        "x": 655,
        "y": 720,
        "wires": []
    },
    {
        "id": "18d1ae70a67e1fa0",
        "type": "link in",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Done",
        "links": [
            "f6237b4590b0aea9",
            "c78ba39c65520f54",
            "8c671c3d4c9ad2c2",
            "d9af02c5.7f4f6",
            "1ebc5fbf.98ebf",
            "5e695cd6.f557f4",
            "1d24c740d28d9ae7",
            "f3cc9a14.e34458",
            "a93b46ec.4c71e8",
            "ad478f38f393d4b1",
            "9524f93d9c92816b",
            "2ff36629.b3c0aa"
        ],
        "x": 1145,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "c78ba39c65520f54",
        "type": "link out",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "links": [
            "18d1ae70a67e1fa0"
        ],
        "x": 1235,
        "y": 780,
        "wires": []
    },
    {
        "id": "8c671c3d4c9ad2c2",
        "type": "link out",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "links": [
            "18d1ae70a67e1fa0"
        ],
        "x": 695,
        "y": 960,
        "wires": []
    },
    {
        "id": "06b8d55e92fa7f4c",
        "type": "link in",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Transform",
        "links": [
            "ad03d501b7ae693a"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "d412c4e547eac963"
            ]
        ]
    },
    {
        "id": "0e05ec7dc7963c34",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "type",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'Read. Unhandled type: ' & payload.type",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 820,
        "wires": [
            [
                "71a20db2f4d30707"
            ]
        ]
    },
    {
        "id": "3d4e8f2e8fc3ae67",
        "type": "switch",
        "z": "d0cf2b5fd7e2cc31",
        "name": "statusCode",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "jsonata_exp",
                "v": "statusCode in ['ECONNREFUSED', 'ETIMEDOUT', \"EAI_AGAIN\"]",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 1170,
        "y": 160,
        "wires": [
            [
                "ad03d501b7ae693a"
            ],
            [],
            [
                "73dd385041ea8836"
            ]
        ]
    },
    {
        "id": "73dd385041ea8836",
        "type": "function",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Error",
        "func": "node.error(\"Http Error. statusCode=\"+msg.statusCode, msg);\n",
        "outputs": 0,
        "noerr": 0,
        "x": 1330,
        "y": 200,
        "wires": []
    },
    {
        "id": "cf1d0035efa46bfd",
        "type": "comment",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Status codes",
        "info": "msg.statusCode =   \n= 200, ok  \n= 500, Internal error, no error thrown from http request node. Throw error with function node.  \n= ECONNREFUSED, Error already thrown from http request node. Dont produce additional errors  ",
        "x": 1170,
        "y": 100,
        "wires": []
    },
    {
        "id": "ccf9f1b17e675306",
        "type": "comment",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Dropping namespace",
        "info": "https://stackoverflow.com/questions/4505103/how-to-remove-xml-namespaces-using-javascript\n",
        "x": 200,
        "y": 480,
        "wires": []
    },
    {
        "id": "d412c4e547eac963",
        "type": "function",
        "z": "d0cf2b5fd7e2cc31",
        "name": "namespace",
        "func": "// Options to drop namespace for xml node\n// from xml2js lib/processors.js\nprefixMatch = new RegExp(/(?!xmlns)^.*:/);\nfunction stripPrefix(str){\n    return str.replace(prefixMatch, '');\n}\nmsg.options = {\"tagNameProcessors\": [stripPrefix]}\nreturn msg;\n\n/*msg.options = {\"xmlns\":true,}*/\n",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 540,
        "wires": [
            [
                "5a27fd4ba61c7cdc"
            ]
        ],
        "info": "Dropping namespace\n\nSetting options to xml2js\n\nhttps://github.com/Leonidas-from-XIV/node-xml2js/blob/master/README.md#options\n"
    },
    {
        "id": "7d27e7925b33401e",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "BrowseResponse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/* Return Item attributes and requested properties */\t(\t   **.Body.BrowseResponse.Elements.\t   $merge(\t       $append(\t           $.\"$\",\t           [\t               Properties.{\"$\".Name: \"Value\".\"_\"}\t            ]\t       )\t   )\t)\t\t\t\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 960,
        "wires": [
            [
                "8c671c3d4c9ad2c2"
            ]
        ]
    },
    {
        "id": "0d156a10dda7593d",
        "type": "template",
        "z": "d0cf2b5fd7e2cc31",
        "name": "GetProperties",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n\t<GetProperties xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\"\n\tReturnAllProperties=\"true\" ReturnPropertyValues=\"true\" ItemPath=\"\">\n\t\t<ItemIDs ItemPath=\"\" ItemName=\"{{{payload.ItemName}}}\" />\n\t\t<PropertyNames>accessRights</PropertyNames>\n\t\t<PropertyNames>dataType</PropertyNames>\n\t</GetProperties>\n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 620,
        "y": 340,
        "wires": [
            [
                "4ca3e03b4552fd3a"
            ]
        ]
    },
    {
        "id": "4ca3e03b4552fd3a",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 895,
        "y": 160,
        "wires": [
            [
                "e699efee3682f827"
            ]
        ],
        "l": false
    },
    {
        "id": "1d24c740d28d9ae7",
        "type": "link out",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "links": [
            "18d1ae70a67e1fa0"
        ],
        "x": 815,
        "y": 1000,
        "wires": []
    },
    {
        "id": "ab14cc75b0c79d34",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "GetPropertiesResponse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/*\t(\t   $Lists := **.Envelope.Body.GetPropertiesResponse.PropertyLists;\t   $0 := $Lists{\t       \"ItemPath\": \"$\".ItemPath,\t       \"ItemName\": \"$\".ItemName\t    };\t   $1 := $Lists.Properties.{\"$\".Name: \"Value\".\"_\"};\t   $merge($append($0, $1))\t)\t*/\t\t/* Return Item attributes and requested properties */\t(\t   **.GetPropertiesResponse.PropertyLists.\t   $merge(\t       $append(\t           $.\"$\",\t           [\t               Properties.{\"$\".Name: \"Value\".\"_\"}\t            ]\t       )\t   )\t)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1000,
        "wires": [
            [
                "1d24c740d28d9ae7"
            ]
        ]
    },
    {
        "id": "27854770fb9875c6",
        "type": "switch",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Errors?",
        "property": "$exists(**.Errors)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 540,
        "wires": [
            [
                "b570dbfbf1a127cd"
            ],
            [
                "4e1e16d94faa6f41"
            ]
        ]
    },
    {
        "id": "b570dbfbf1a127cd",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorsID",
                "pt": "msg",
                "to": "**.Errors.*.ID",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 520,
        "wires": [
            [
                "35d666d0ac16df3d"
            ]
        ]
    },
    {
        "id": "35d666d0ac16df3d",
        "type": "function",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Error",
        "func": "node.error(\"OPC XML Error: \" + msg.errorsID, msg);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 520,
        "wires": []
    },
    {
        "id": "4e1e16d94faa6f41",
        "type": "link out",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "mode": "link",
        "links": [
            "7d926d3a063da7a9"
        ],
        "x": 575,
        "y": 560,
        "wires": []
    },
    {
        "id": "7d926d3a063da7a9",
        "type": "link in",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "links": [
            "4e1e16d94faa6f41"
        ],
        "x": 60,
        "y": 820,
        "wires": [
            [
                "95da086e54fd2111"
            ]
        ]
    },
    {
        "id": "69bbb82deea6a696",
        "type": "catch",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "scope": [
            "ab14cc75b0c79d34"
        ],
        "uncaught": false,
        "x": 370,
        "y": 1040,
        "wires": [
            [
                "629287a8aafcf70d"
            ]
        ]
    },
    {
        "id": "e2e8050a6fbead91",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.GetPropertiesResponse.PropertyLists",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1040,
        "wires": [
            [
                "1d24c740d28d9ae7"
            ]
        ]
    },
    {
        "id": "629287a8aafcf70d",
        "type": "function",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Warning",
        "func": "node.warn(\"Unexpected GetPropertiesResponse\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 1040,
        "wires": [
            [
                "e2e8050a6fbead91"
            ]
        ]
    },
    {
        "id": "21051de4cfa89240",
        "type": "template",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Subscribe",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n<Subscribe xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\"\n    ReturnValuesOnReply=\"true\" \n    SubscriptionPingRate=\"{{payload.SubscriptionPingRate}}\"\n    >\n    <Options\n        ReturnErrorText=\"true\"\n        ReturnItemTime=\"true\"\n        ReturnItemName=\"true\"\n        />\n    <ItemList\n        {{#payload.ItemPath}} ItemPath=\"{{{payload.ItemPath}}}\"{{/payload.ItemPath}}\n        {{#payload.requestedSamplingRate}} requestedSamplingRate=\"{{{payload.requestedSamplingRate}}}\"{{/payload.requestedSamplingRate}}\n        >\n        {{#payload.ItemList}}\n        <Items\n            ItemName=\"{{{ItemName}}}\"{{#ItemPath}} \n            ItemPath=\"{{{ItemPath}}}\"{{/ItemPath}}{{#ClientItemHandle}}\n            ClientItemHandle=\"{{{ClientItemHandle}}}\"{{/ClientItemHandle}}\n            />\n        {{/payload.ItemList}}\n    </ItemList>\n</Subscribe>\t  \n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 720,
        "y": 180,
        "wires": [
            [
                "4ca3e03b4552fd3a"
            ]
        ]
    },
    {
        "id": "329337a876af9a31",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "env",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "($boolean($env('action'))) ? $env('action'): $boolean(action) ? action : \"GetStatus\"\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "($boolean($env(\"url\"))) ? $env(\"url\"): $boolean(url) ? url : \"\"\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 180,
        "wires": [
            [
                "f75692c459b1dc3d"
            ]
        ]
    },
    {
        "id": "e6a5c5e9cf994edb",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "default",
        "rules": [
            {
                "t": "set",
                "p": "payload.SubscriptionPingRate",
                "pt": "msg",
                "to": "(\"SubscriptionPingRate\" in $keys(payload)) ? payload.SubscriptionPingRate: 60000\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.requestedSamplingRate",
                "pt": "msg",
                "to": "(\"requestedSamplingRate\" in $keys(payload)) ? payload.requestedSamplingRate: 1000\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "21051de4cfa89240"
            ]
        ]
    },
    {
        "id": "9606582474b12422",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "SubscribeResponse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.SubscribeResponse.{\t\"ServerSubHandle\":$.\"$\".ServerSubHandle\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 840,
        "wires": [
            [
                "ad478f38f393d4b1"
            ]
        ]
    },
    {
        "id": "ad478f38f393d4b1",
        "type": "link out",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "links": [
            "18d1ae70a67e1fa0"
        ],
        "x": 615,
        "y": 840,
        "wires": []
    },
    {
        "id": "b054cb4430e840f8",
        "type": "template",
        "z": "d0cf2b5fd7e2cc31",
        "name": "SubscriptionPolledRefresh",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n<SubscriptionPolledRefresh xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\" \n    ReturnAllItems=\"true\"> \n\t<Options ReturnErrorText=\"true\" ReturnItemTime=\"true\" ReturnItemName=\"true\" LocaleID=\"en\" /> \n\t<ServerSubHandles>{{{payload.ServerSubHandle}}}</ServerSubHandles>\n</SubscriptionPolledRefresh> \n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 660,
        "y": 220,
        "wires": [
            [
                "4ca3e03b4552fd3a"
            ]
        ]
    },
    {
        "id": "60b2c94907db639b",
        "type": "template",
        "z": "d0cf2b5fd7e2cc31",
        "name": "SubscriptionCancel",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n<SubscriptionCancel xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\"\n\tServerSubHandle=\"{{{payload.ServerSubHandle}}}\"/> \n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 630,
        "y": 260,
        "wires": [
            [
                "4ca3e03b4552fd3a"
            ]
        ]
    },
    {
        "id": "d9bb22c1f68c7cb6",
        "type": "template",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Write",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n <Write xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\"  ReturnValuesOnReply=\"true\">\n  <Options\n    ReturnErrorText=\"true\"\n    ReturnItemTime=\"true\"\n    ReturnItemName=\"true\"\n    ReturnItemPath=\"true\"\n    LocaleID=\"en\" \n    />\n  <ItemList{{#payload.ItemPathExists}} ItemPath=\"{{{payload.ItemPath}}}\"{{/payload.ItemPathExists}}>\n    {{#payload.ItemList}}\n       <Items  ItemName=\"{{{ItemName}}}\"{{#ItemPathExists}} ItemPath=\"{{{ItemPath}}}\"{{/ItemPathExists}}{{#ClientItemHandle}} ClientItemHandle=\"{{{ClientItemHandle}}}\"{{/ClientItemHandle}}>\n            <Value xsi:type=\"{{dataType}}\">{{value}}</Value>\n        </Items>\n    {{/payload.ItemList}}\n  </ItemList>\n </Write>\t  \n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 730,
        "y": 140,
        "wires": [
            [
                "4ca3e03b4552fd3a"
            ]
        ]
    },
    {
        "id": "f75692c459b1dc3d",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "header",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"SOAPAction\":\"http://opcfoundation.org/webservices/XMLDA/1.0/\" & action,\t   \"Content-Type\":\"text/xml\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 180,
        "wires": [
            [
                "bd1315a6e3f8b4f6"
            ]
        ]
    },
    {
        "id": "0972f11803b5d1cc",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "SubscriptionPolledRefreshResult",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.SubscriptionPolledRefreshResponse.RItemList.Items.{\t\"ItemName\":$.\"$\".ItemName,\t\"ClientItemHandle\":$.\"$\".ClientItemHandle,\t\"Timestamp\":$.\"$\".Timestamp,\t\"value\": Value.\"_\",\t\"type\": Value.\"$\".\"xsi:type\",\t\"Quality\": Quality[0]\t}[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 880,
        "wires": [
            [
                "dbecebde486aaf4a"
            ]
        ]
    },
    {
        "id": "0e22dd1b5020fc6f",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "SubscriptionCancelResponse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.SubscriptionCancelResponse.*.ClientRequestHandle{\t\"ClientRequestHandle\":$\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 920,
        "wires": [
            [
                "9524f93d9c92816b"
            ]
        ]
    },
    {
        "id": "9524f93d9c92816b",
        "type": "link out",
        "z": "d0cf2b5fd7e2cc31",
        "name": "",
        "links": [
            "18d1ae70a67e1fa0"
        ],
        "x": 675,
        "y": 920,
        "wires": []
    },
    {
        "id": "3df97260b9a86892",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "WriteResponse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.WriteResponse.RItemList.Items.{\t\"ItemName\":$.\"$\".ItemName,\t\"Timestamp\":$.\"$\".Timestamp,\t\"value\": Value.\"_\",\t\"type\": Value.\"$\".\"xsi:type\"\t}[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 800,
        "wires": [
            [
                "dbecebde486aaf4a"
            ]
        ]
    },
    {
        "id": "be1a2b999811fbd1",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.Status{\t\"StatusInfo\":StatusInfo,\t\"VendorInfo\":VendorInfo,\t\"SupportedLocaleIDs\":SupportedLocaleIDs,\t\"SupportedInterfaceVersions\":SupportedInterfaceVersions,\t\"StartTime\":*.StartTime,\t\"ProductVersion\":*.ProductVersion,\t\"ServerState\":$$.**.ServerState\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 720,
        "wires": [
            [
                "14b16d3850b92b59"
            ]
        ]
    },
    {
        "id": "14b16d3850b92b59",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "string cleanup",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/* Straight strings or \"xsd:string\" */\t(\t$clean := function($o) {$join([\t$filter($o, function($v,$i,$a) {\"xsi:type\" in $keys($v.\"$\") ? true: false}).\"_\",\t$filter($o, function($v,$i,$a) {\"xsi:type\" in $keys($v.\"$\") ? false: true})\t], \",\")};\t{\t\"StatusInfo\": $clean(payload.StatusInfo),\t\"VendorInfo\": $clean(payload.VendorInfo),\t\"SupportedLocaleIDs\": $clean(payload.SupportedLocaleIDs),\t\"SupportedInterfaceVersions\": $clean(payload.SupportedInterfaceVersions),\t\"StartTime\":payload.StartTime,\t\"ProductVersion\":payload.ProductVersion,\t\"ServerState\":payload.ServerState\t}\t\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 720,
        "wires": [
            [
                "f6237b4590b0aea9"
            ]
        ]
    },
    {
        "id": "84afeb6ac16419de",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "ItemPath",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/*Global ItemPath*/ \t/*Add info about existing ItemPath for compatability with following template node mustache syntax */\t(\t    $merge(\t       [\t           { \"ItemPathExists\": \"ItemPath\" in $keys(payload) },\t           payload\t]\t)\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/* Single Item's ItemPath */ \t/*Add info about existing ItemPath for compatability with following template node mustache syntax */\t(\t   payload  ~> | ItemList |  {\"ItemPathExists\": \"ItemPath\" in $keys()} | ;\t)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 140,
        "wires": [
            [
                "d9bb22c1f68c7cb6"
            ]
        ]
    },
    {
        "id": "052e34019cc9323b",
        "type": "comment",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Soap Envelope",
        "info": "Construct SOAP Envelope depending on opcxml action\n\nNote:\nServer sometimes are quity specific on how to handle the ItemPath property. An empty ItemPath is not always treated the same as a non existing. Use GetProperties action to find what is correct in a specific use case.\n",
        "x": 420,
        "y": 60,
        "wires": []
    },
    {
        "id": "be54917b0628a69d",
        "type": "comment",
        "z": "d0cf2b5fd7e2cc31",
        "name": "Parse Response",
        "info": "",
        "x": 200,
        "y": 720,
        "wires": []
    },
    {
        "id": "79afa75c98cb9f87",
        "type": "change",
        "z": "d0cf2b5fd7e2cc31",
        "name": "ItemPath",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/*Global ItemPath*/ \t/*Add info about existing ItemPath for compatability with following template node mustache syntax */\t(\t    $merge(\t       [\t           { \"ItemPathExists\": \"ItemPath\" in $keys(payload) },\t           payload\t]\t)\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/* Single Item's ItemPath */ \t/*Add info about existing ItemPath for compatability with following template node mustache syntax */\t(\t   payload  ~> | ItemList |  {\"ItemPathExists\": \"ItemPath\" in $keys()} | ;\t)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 100,
        "wires": [
            [
                "4f89507a78076878"
            ]
        ]
    },
    {
        "id": "f8ca6c58c2103c47",
        "type": "comment",
        "z": "d0cf2b5fd7e2cc31",
        "name": "updated 2023-05-19",
        "info": "2019-10-16\n-Published\n\n2023-05-19\n-Fix transform to Soap Envelope for correct handling of empty ItemPath\n-GetProperties parsing all returned properties\n-Tested with .NET server implementation",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "0ec2af3b6e83c19c",
        "type": "tab",
        "label": "Example",
        "disabled": false,
        "info": ""
    },
    {
        "id": "66f18c5e6983573e",
        "type": "subflow:d0cf2b5fd7e2cc31",
        "z": "0ec2af3b6e83c19c",
        "name": "Write",
        "env": [
            {
                "name": "action",
                "value": "Write",
                "type": "str"
            }
        ],
        "x": 350,
        "y": 300,
        "wires": [
            [
                "d97d07cd388a9eaa"
            ]
        ]
    },
    {
        "id": "d97d07cd388a9eaa",
        "type": "debug",
        "z": "0ec2af3b6e83c19c",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 300,
        "wires": []
    },
    {
        "id": "fcb0d649ed94936c",
        "type": "inject",
        "z": "0ec2af3b6e83c19c",
        "name": ".NET Write Int",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://opcxml.demo-this.com/XmlDaSampleServer/Service.asmx",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": ".NET Write Int",
        "payload": "{\"ItemList\":[{\"ItemPath\":\"\",\"ItemName\":\"Static/Analog Types/Int\",\"dataType\":\"xsd:int\",\"value\":17}]}",
        "payloadType": "json",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "66f18c5e6983573e"
            ]
        ]
    },
    {
        "id": "fe0a807f40c80edb",
        "type": "inject",
        "z": "0ec2af3b6e83c19c",
        "name": ".NET Browse",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://opcxml.demo-this.com/XmlDaSampleServer/Service.asmx",
                "vt": "str"
            },
            {
                "p": "action",
                "v": "Browse",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": ".NET Browse",
        "payload": "{\"ItemName\":\"Dynamic/Analog Types\"}",
        "payloadType": "json",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "f54a5ca57215d0e0"
            ]
        ]
    },
    {
        "id": "f54a5ca57215d0e0",
        "type": "subflow:d0cf2b5fd7e2cc31",
        "z": "0ec2af3b6e83c19c",
        "name": "",
        "env": [
            {
                "name": "action",
                "value": "",
                "type": "str"
            }
        ],
        "x": 440,
        "y": 100,
        "wires": [
            [
                "ade2c8a604a535ea"
            ]
        ]
    },
    {
        "id": "4d494688936a64da",
        "type": "inject",
        "z": "0ec2af3b6e83c19c",
        "name": "Advosol Browse",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://info.advosol.com/XMLDADemo/TS_Sim/OpcDAGateway.asmx",
                "vt": "str"
            },
            {
                "p": "action",
                "v": "Browse",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Advosol Browse",
        "payload": "{\"ItemName\":\"Dynamic.Analog Types\"}",
        "payloadType": "json",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "f54a5ca57215d0e0"
            ]
        ]
    },
    {
        "id": "7d49c111970743b7",
        "type": "inject",
        "z": "0ec2af3b6e83c19c",
        "name": ".NET GetProperties",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://opcxml.demo-this.com/XmlDaSampleServer/Service.asmx",
                "vt": "str"
            },
            {
                "p": "action",
                "v": "GetProperties",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": ".NET GetProperties",
        "payload": "{\"ItemPath\":\"\",\"ItemName\":\"Dynamic/Analog Types/Double\"}",
        "payloadType": "json",
        "x": 200,
        "y": 180,
        "wires": [
            [
                "f54a5ca57215d0e0"
            ]
        ]
    },
    {
        "id": "6b6d453d1a84f10f",
        "type": "inject",
        "z": "0ec2af3b6e83c19c",
        "name": ".NET Read Int",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "url",
                "v": "http://opcxml.demo-this.com/XmlDaSampleServer/Service.asmx",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": ".NET Read Int",
        "payload": "{\"ItemList\":[{\"ItemPath\":\"\",\"ItemName\":\"Static/Analog Types/Int\"}]}",
        "payloadType": "json",
        "x": 180,
        "y": 260,
        "wires": [
            [
                "c2c1d1c7c617156a"
            ]
        ]
    },
    {
        "id": "c2c1d1c7c617156a",
        "type": "subflow:d0cf2b5fd7e2cc31",
        "z": "0ec2af3b6e83c19c",
        "name": "Read",
        "env": [
            {
                "name": "action",
                "value": "Read",
                "type": "str"
            }
        ],
        "x": 350,
        "y": 260,
        "wires": [
            [
                "7c20a838880302c0"
            ]
        ]
    },
    {
        "id": "7c20a838880302c0",
        "type": "debug",
        "z": "0ec2af3b6e83c19c",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 260,
        "wires": []
    },
    {
        "id": "886696f12b1a6fd5",
        "type": "comment",
        "z": "0ec2af3b6e83c19c",
        "name": "OPC XML Client Examples",
        "info": "",
        "x": 190,
        "y": 40,
        "wires": []
    },
    {
        "id": "ade2c8a604a535ea",
        "type": "debug",
        "z": "0ec2af3b6e83c19c",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 100,
        "wires": []
    }
]