[
    {
        "id": "90c1b7c454a7029f",
        "type": "tab",
        "label": "Wetter mit Dashboard",
        "disabled": false,
        "info": "Unterschiedliche Wetter input mit MQTT vernetzt;\nVerlinkung/ Darstellung in dashboard\nWetter: \n- DWD (Unwetter)\n- OpenWeatherMap\n- DWD Wetter Station\n\nTrue/ False switch (Flow weiter unten)"
    },
    {
        "id": "c9a2292b165a468d",
        "type": "mqtt in",
        "z": "90c1b7c454a7029f",
        "name": "",
        "topic": "/Wetter/Temperatur",
        "qos": "0",
        "datatype": "utf8",
        "broker": "d8d4adf0.7d5a2",
        "inputs": 0,
        "x": 130,
        "y": 1660,
        "wires": [
            [
                "25b57237721bef02"
            ]
        ]
    },
    {
        "id": "25b57237721bef02",
        "type": "ui_gauge",
        "z": "90c1b7c454a7029f",
        "name": "Temperatur",
        "group": "2e3f5201.a75896",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Aktuelle Temperatur",
        "label": "° C",
        "format": "{{value | number:0}}",
        "min": "-30",
        "max": "40",
        "colors": [
            "#7ddeec",
            "#e6e600",
            "#ca3838"
            
        ],
        "seg1": "",
        "seg2": "",
        "x": 470,
        "y": 1660,
        "wires": []
    },
    {
        "id": "df61c32f017efe44",
        "type": "openweathermap in",
        "z": "90c1b7c454a7029f",
        "name": "Stockholm",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "Stockholm",
        "country": "Sweden",
        "language": "de",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "b0f1522d4514715e",
                "8ecfde3fa2ddee1f",
                "248f2600bab77bba"
            ]
        ]
    },
    {
        "id": "b0f1522d4514715e",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "NM Openweather",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 440,
        "wires": []
    },
    {
        "id": "dbe69ea8d627d815",
        "type": "function",
        "z": "90c1b7c454a7029f",
        "name": "Temperatur extrahieren",
        "func": "return {payload: msg.payload.tempc + \" °C\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 640,
        "wires": [
            [
                "6e679b6ed57ac87e",
                "bc257c8e267f5c1c"
            ]
        ]
    },
    {
        "id": "6e679b6ed57ac87e",
        "type": "mqtt out",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Temperatur",
        "topic": "/Wetter/Temperatur",
        "qos": "0",
        "retain": "true",
        "broker": "d8d4adf0.7d5a2",
        "x": 950,
        "y": 660,
        "wires": []
    },
    {
        "id": "bc257c8e267f5c1c",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "Temperatur",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 620,
        "wires": []
    },
    {
        "id": "62f5889b28089ed0",
        "type": "function",
        "z": "90c1b7c454a7029f",
        "name": "Wind",
        "func": "return {payload: msg.payload.windspeed *3.6+ \" km/h\"}; \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 760,
        "wires": [
            [
                "84ed89ec143aaec6",
                "b7e42c61ca44f2c7"
            ]
        ]
    },
    {
        "id": "84ed89ec143aaec6",
        "type": "mqtt out",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Wind",
        "topic": "/Wetter/Wind",
        "qos": "0",
        "retain": "true",
        "broker": "d8d4adf0.7d5a2",
        "x": 930,
        "y": 760,
        "wires": []
    },
    {
        "id": "0c60e0c69668ad53",
        "type": "function",
        "z": "90c1b7c454a7029f",
        "name": "Luftfeuchtigkeit ",
        "func": "return {payload: msg.payload.humidity + \" %\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 980,
        "wires": [
            [
                "f9d3738bd456a71d",
                "eff2d0d0a8351a5e"
            ]
        ]
    },
    {
        "id": "f9d3738bd456a71d",
        "type": "mqtt out",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Luftfeuchtigkeit",
        "topic": "/Wetter/Luftfeuchtigkeit",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d8d4adf0.7d5a2",
        "x": 970,
        "y": 980,
        "wires": []
    },
    {
        "id": "a9176257b907f79c",
        "type": "ui_gauge",
        "z": "90c1b7c454a7029f",
        "name": "Luftfeuchtigkeit",
        "group": "2e3f5201.a75896",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Luftfeuchtigkeit",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#ec1007",
            "#e69713",
            "#087eca"
        ],
        "seg1": "",
        "seg2": "",
        "x": 480,
        "y": 1840,
        "wires": []
    },
    {
        "id": "6d2e5f5c3505736d",
        "type": "mqtt in",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Wind",
        "topic": "/Wetter/Wind",
        "qos": "0",
        "datatype": "utf8",
        "broker": "d8d4adf0.7d5a2",
        "inputs": 0,
        "x": 110,
        "y": 1780,
        "wires": [
            [
                "3013f1652d8d5ddb"
            ]
        ]
    },
    {
        "id": "6061b5397421e6ec",
        "type": "mqtt in",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Luftfeuchtigkeit",
        "topic": "/Wetter/Luftfeuchtigkeit",
        "qos": "0",
        "datatype": "utf8",
        "broker": "d8d4adf0.7d5a2",
        "inputs": 0,
        "x": 140,
        "y": 1840,
        "wires": [
            [
                "a9176257b907f79c"
            ]
        ]
    },
    {
        "id": "cbfc6e2a9f287138",
        "type": "function",
        "z": "90c1b7c454a7029f",
        "name": "Sunrise",
        "func": "{payload: msg.payload.sunrise};\nvar options = { hour: 'numeric', minute: 'numeric', second: 'numeric'};\nvar myTime = new Date();        //new date object\nmyTime.setTime(msg.payload.sunrise * 1000);  //set linux time\nvar myTimeString = myTime.toLocaleDateString('de-DE', options); //convert to string\nnode.status({fill:\"green\",shape:\"dot\",text:myTimeString});\n// dd:mm:jj\n//msg.payload = myTime.toLocaleDateString(); //convert to string\n// dd:mm:jj hh:mm:ss\nmsg.payload = myTimeString;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 1040,
        "wires": [
            [
                "cd364472369a151e"
            ]
        ]
    },
    {
        "id": "f9b9182660e46bab",
        "type": "function",
        "z": "90c1b7c454a7029f",
        "name": "Sunset",
        "func": "{payload: msg.payload.sunset};\nvar options = { hour: 'numeric', minute: 'numeric', second: 'numeric'};\nvar myTime = new Date();        //new date object\nmyTime.setTime(msg.payload.sunset * 1000);  //set linux time\nvar myTimeString = myTime.toLocaleDateString('de-DE', options); //convert to string\nnode.status({fill:\"green\",shape:\"dot\",text:myTimeString});\n// dd:mm:jj\n//msg.payload = myTime.toLocaleDateString(); //convert to string\n// dd:mm:jj hh:mm:ss\nmsg.payload = myTimeString;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 1100,
        "wires": [
            [
                "743b757084003cd9"
            ]
        ]
    },
    {
        "id": "cd364472369a151e",
        "type": "mqtt out",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Sunrise",
        "topic": "/Wetter/Sunrise",
        "qos": "0",
        "retain": "true",
        "broker": "d8d4adf0.7d5a2",
        "x": 940,
        "y": 1040,
        "wires": []
    },
    {
        "id": "743b757084003cd9",
        "type": "mqtt out",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Sunset",
        "topic": "/Wetter/Sunset",
        "qos": "0",
        "retain": "true",
        "broker": "d8d4adf0.7d5a2",
        "x": 940,
        "y": 1100,
        "wires": []
    },
    {
        "id": "a24f3c326ec77cd0",
        "type": "mqtt in",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Sunrise",
        "topic": "/Wetter/Sunrise",
        "qos": "0",
        "datatype": "utf8",
        "broker": "d8d4adf0.7d5a2",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 1900,
        "wires": [
            [
                "1acd43e961aed5e2"
            ]
        ]
    },
    {
        "id": "f6239a41ba5a243b",
        "type": "mqtt in",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Sunset",
        "topic": "/Wetter/Sunset",
        "qos": "0",
        "datatype": "utf8",
        "broker": "d8d4adf0.7d5a2",
        "inputs": 0,
        "x": 120,
        "y": 1960,
        "wires": [
            [
                "e7a48eb612b93bb7"
            ]
        ]
    },
    {
        "id": "617edadab131d120",
        "type": "mqtt in",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Detail",
        "topic": "/Wetter/Detail",
        "qos": "0",
        "datatype": "utf8",
        "broker": "d8d4adf0.7d5a2",
        "inputs": 0,
        "x": 110,
        "y": 1600,
        "wires": [
            [
                "6aeee5e14404acf9"
            ]
        ]
    },
    {
        "id": "a808d323b650bfb2",
        "type": "mqtt in",
        "z": "90c1b7c454a7029f",
        "name": "",
        "topic": "/Home/Datum",
        "qos": "0",
        "datatype": "auto",
        "broker": "d8d4adf0.7d5a2",
        "inputs": 0,
        "x": 110,
        "y": 1460,
        "wires": [
            [
                "14e4066ef67d5456"
            ]
        ]
    },
    {
        "id": "a3ac68bba43538db",
        "type": "inject",
        "z": "90c1b7c454a7029f",
        "name": "Testing true",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 2100,
        "wires": [
            [
                "f0c0961e146a169c"
            ]
        ]
    },
    {
        "id": "f0c0961e146a169c",
        "type": "mqtt out",
        "z": "90c1b7c454a7029f",
        "name": "Testing MQTT",
        "topic": "/Home/Testing",
        "qos": "0",
        "retain": "false",
        "broker": "d8d4adf0.7d5a2",
        "x": 560,
        "y": 2080,
        "wires": []
    },
    {
        "id": "40d54a24ac502e9a",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "Testing output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 2240,
        "wires": []
    },
    {
        "id": "1038fd65a4e5a6ec",
        "type": "mqtt in",
        "z": "90c1b7c454a7029f",
        "name": "Testing MQTT",
        "topic": "/Home/Testing",
        "qos": "0",
        "datatype": "utf8",
        "broker": "d8d4adf0.7d5a2",
        "inputs": 0,
        "x": 90,
        "y": 2320,
        "wires": [
            [
                "7929f86864adb84c",
                "585d1ea37efede4f"
            ]
        ]
    },
    {
        "id": "875b7557223ce8ec",
        "type": "inject",
        "z": "90c1b7c454a7029f",
        "name": "Testing false",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 110,
        "y": 2180,
        "wires": [
            [
                "f0c0961e146a169c"
            ]
        ]
    },
    {
        "id": "7929f86864adb84c",
        "type": "switch",
        "z": "90c1b7c454a7029f",
        "name": "true / false switch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 2320,
        "wires": [
            [
                "bd58e0b9f32a05d9",
                "1b9303e1859e63b0"
            ],
            [
                "c5c3e6f0d4b77624",
                "3acc71cc261dafdb"
            ]
        ]
    },
    {
        "id": "bd58e0b9f32a05d9",
        "type": "change",
        "z": "90c1b7c454a7029f",
        "name": "set to true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 2300,
        "wires": [
            [
                "40d54a24ac502e9a"
            ]
        ]
    },
    {
        "id": "c5c3e6f0d4b77624",
        "type": "change",
        "z": "90c1b7c454a7029f",
        "name": "set to false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 2360,
        "wires": [
            [
                "40d54a24ac502e9a"
            ]
        ]
    },
    {
        "id": "585d1ea37efede4f",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "output 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 274,
        "y": 2219,
        "wires": []
    },
    {
        "id": "e7a48eb612b93bb7",
        "type": "ui_text",
        "z": "90c1b7c454a7029f",
        "group": "2e3f5201.a75896",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Sunset",
        "label": "Sonnenuntergang",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 460,
        "y": 1960,
        "wires": []
    },
    {
        "id": "1acd43e961aed5e2",
        "type": "ui_text",
        "z": "90c1b7c454a7029f",
        "group": "2e3f5201.a75896",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Sunrise",
        "label": "Sonnenaufgang",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 460,
        "y": 1900,
        "wires": []
    },
    {
        "id": "3acc71cc261dafdb",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "output 2.2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 2400,
        "wires": []
    },
    {
        "id": "1b9303e1859e63b0",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "output 2.1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 2260,
        "wires": []
    },
    {
        "id": "eff2d0d0a8351a5e",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "Humidity",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 940,
        "wires": []
    },
    {
        "id": "8ecfde3fa2ddee1f",
        "type": "delay",
        "z": "90c1b7c454a7029f",
        "name": "1Msg/ 60 min",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "10",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 120,
        "y": 520,
        "wires": [
            [
                "dbe69ea8d627d815",
                "62f5889b28089ed0",
                "0c60e0c69668ad53",
                "cbfc6e2a9f287138",
                "f9b9182660e46bab",
                "d86a0ca7930467c7",
                "2f50b9854c259165"
            ]
        ],
        "info": "msg = msg.payload,\nreturn msg;"
    },
    {
        "id": "d86a0ca7930467c7",
        "type": "function",
        "z": "90c1b7c454a7029f",
        "name": "Wetter Detail ",
        "func": "return {payload: msg.payload.detail};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 540,
        "wires": [
            [
                "e4cdf3ac2dbdc53d",
                "bf0c0dbf1939cd91"
            ]
        ]
    },
    {
        "id": "e4cdf3ac2dbdc53d",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "Detail",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 500,
        "wires": []
    },
    {
        "id": "bf0c0dbf1939cd91",
        "type": "mqtt out",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Detail",
        "topic": "/Wetter/Detail",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d8d4adf0.7d5a2",
        "x": 940,
        "y": 540,
        "wires": []
    },
    {
        "id": "8e5a44ba9e6890bf",
        "type": "inject",
        "z": "90c1b7c454a7029f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "2f50b9854c259165",
        "type": "function",
        "z": "90c1b7c454a7029f",
        "name": "Winddirection",
        "func": "return {payload: msg.payload.winddirection};           ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 860,
        "wires": [
            [
                "650e5fca126e9e67",
                "2f8ac6d7cd47b8e8"
            ]
        ]
    },
    {
        "id": "2f8ac6d7cd47b8e8",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "Winddirection",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 880,
        "wires": []
    },
    {
        "id": "375dfa025c7261e4",
        "type": "mqtt in",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Winddirection",
        "topic": "/Wetter/Winddirection",
        "qos": "0",
        "datatype": "utf8",
        "broker": "d8d4adf0.7d5a2",
        "inputs": 0,
        "x": 140,
        "y": 1720,
        "wires": [
            [
                "2f61c1af76f63336"
            ]
        ]
    },
    {
        "id": "3b7798c3a792a494",
        "type": "ui_gauge",
        "z": "90c1b7c454a7029f",
        "name": "Windrichtung",
        "group": "3bf74b01.4b4afc",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "compass",
        "title": "Windrichtung",
        "label": "{{msg.payload.description}}",
        "format": "",
        "min": 0,
        "max": "360",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "0",
        "seg2": "360",
        "x": 870,
        "y": 1720,
        "wires": []
    },
    {
        "id": "650e5fca126e9e67",
        "type": "mqtt out",
        "z": "90c1b7c454a7029f",
        "name": "/Wetter/Winddirection",
        "topic": "/Wetter/Winddirection",
        "qos": "0",
        "retain": "true",
        "broker": "d8d4adf0.7d5a2",
        "x": 960,
        "y": 820,
        "wires": []
    },
    {
        "id": "3013f1652d8d5ddb",
        "type": "ui_gauge",
        "z": "90c1b7c454a7029f",
        "name": "Windstärke",
        "group": "3bf74b01.4b4afc",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Windstärke",
        "label": "km/h",
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "200",
        "colors": [
            "#7ddeec",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 470,
        "y": 1780,
        "wires": []
    },
    {
        "id": "6aeee5e14404acf9",
        "type": "ui_text",
        "z": "90c1b7c454a7029f",
        "group": "2e3f5201.a75896",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Wetter Details",
        "label": "Detail",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 480,
        "y": 1600,
        "wires": []
    },
    {
        "id": "2f61c1af76f63336",
        "type": "compass-point",
        "z": "90c1b7c454a7029f",
        "direction": "toCompass",
        "subset": "secondary",
        "language": "de",
        "inputField": "payload",
        "outputField": "payload",
        "name": "Change to compass point",
        "x": 510,
        "y": 1720,
        "wires": [
            [
                "4259d96a60d484da",
                "3b7798c3a792a494",
                "a10955c8aae1e848",
                "14a14a8e9358ea9a"
            ]
        ]
    },
    {
        "id": "c21b1109048f64e5",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "Richtung_neu",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4259d96a60d484da",
        "type": "function",
        "z": "90c1b7c454a7029f",
        "name": "Winddirection",
        "func": "return {payload: msg.payload.direction};           ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 1560,
        "wires": [
            [
                "c21b1109048f64e5"
            ]
        ]
    },
    {
        "id": "a10955c8aae1e848",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "Compass Point",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 1640,
        "wires": []
    },
    {
        "id": "1c1b2421a2bbd26a",
        "type": "mqtt out",
        "z": "90c1b7c454a7029f",
        "name": "",
        "topic": "/Wetter/Wind_Richtung",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d8d4adf0.7d5a2",
        "x": 890,
        "y": 1460,
        "wires": []
    },
    {
        "id": "14a14a8e9358ea9a",
        "type": "function",
        "z": "90c1b7c454a7029f",
        "name": "Winddirection",
        "func": "return {payload: msg.payload.description};           ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 1460,
        "wires": [
            [
                "1c1b2421a2bbd26a"
            ]
        ]
    },
    {
        "id": "b7e42c61ca44f2c7",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "Wind Speed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 720,
        "wires": []
    },
    {
        "id": "14e4066ef67d5456",
        "type": "ui_text",
        "z": "90c1b7c454a7029f",
        "group": "25bd9d50.87fe6a",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Datum",
        "label": "Datum  Uhrzeit ",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 450,
        "y": 1460,
        "wires": []
    },
    {
        "id": "1208746ffa50743f",
        "type": "mqtt out",
        "z": "90c1b7c454a7029f",
        "name": "",
        "topic": "/Home/Datum",
        "qos": "0",
        "retain": "true",
        "broker": "9fa2607d.99f8d",
        "x": 940,
        "y": 360,
        "wires": []
    },
    {
        "id": "7e1953d33e06641d",
        "type": "debug",
        "z": "90c1b7c454a7029f",
        "name": "Datum",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 320,
        "wires": []
    },
    {
        "id": "248f2600bab77bba",
        "type": "function",
        "z": "90c1b7c454a7029f",
        "name": "Datum in ISO Format",
        "func": "// (1) wandelt timestamp ins ISO Datumformat um\n//msg.timestamp= new Date().toISOString()\n\n// (2) beliebiges Datum festlegbar: hier: YYYY-MM-DD HH:MM.SS\n//     (Ausgabeformat wird danz am Ende zusammengestellt)\nvar now     = new Date(); \nvar year    = now.getFullYear();\nvar month   = now.getMonth()+1; \nvar day     = now.getDate();\nvar hour    = now.getHours();\nvar minute  = now.getMinutes();\nif(month.toString().length == 1) {\nvar month = '0'+month;\n}\nif(day.toString().length == 1) {\nvar day = '0'+day;\n}   \nif(hour.toString().length == 1) {\nvar hour = '0'+hour;\n}\nif(minute.toString().length == 1) {\nvar minute = '0'+minute;\n}\n\n// Variante1: wenn z.B. nicht ein vorhandener Payload\n// überschrieben werden soll, sondern um ein\n// Datum ergänzt werden soll.  \n\n//msg.timestamp = year+'-'+month+'-'+day+' '+hour+':'+minute+':'+second;\n\n// Variante 2: Function gibt die aktuelle Zeit als payload aus\nnow = day+'-'+month+'-'+year+' '+hour+':'+minute;\n\n// JSON Antwort parsen\nvar weather=(msg.payload);\n \n// Neue Nachricht mit Payload erstellen\nvar newMsg = { payload:now};\n// Zurückgeben der Nachricht\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 360,
        "wires": [
            [
                "7e1953d33e06641d",
                "1208746ffa50743f"
            ]
        ]
    },
    {
        "id": "d8d4adf0.7d5a2",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "2e3f5201.a75896",
        "type": "ui_group",
        "name": "Wetterdaten Neumarkt i.d.OPf.",
        "tab": "e92767a.242f218",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3bf74b01.4b4afc",
        "type": "ui_group",
        "name": "Wind",
        "tab": "e92767a.242f218",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false
    },
    {
        "id": "25bd9d50.87fe6a",
        "type": "ui_group",
        "name": "Datum",
        "tab": "e92767a.242f218",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "9fa2607d.99f8d",
        "type": "mqtt-broker",
        "name": "Raspi",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "e92767a.242f218",
        "type": "ui_tab",
        "name": "Home",
        "icon": "/Home/Wetter",
        "disabled": false,
        "hidden": false
    }
]